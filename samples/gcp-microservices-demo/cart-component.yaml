apiVersion: openchoreo.dev/v1alpha1
kind: Component
metadata:
  name: cart
spec:
  owner:
    projectName: gcp-microservice-demo
  type: Service

---

apiVersion: openchoreo.dev/v1alpha1
kind: Workload
metadata:
  name: cart
spec:
  owner:
    componentName: cart
    projectName: gcp-microservice-demo
  containers:
    main:
      image: us-central1-docker.pkg.dev/google-samples/microservices-demo/cartservice:v0.10.3
      env:
        - key: PORT
          value: "7070"

  endpoints:
    grpc-endpoint:
      type: gRPC
      port: 7070
      schema:
        type: gRPC
        content: |
          syntax = "proto3";

          package hipstershop;
          
          service CartService {
              rpc AddItem(AddItemRequest) returns (Empty) {}
              rpc GetCart(GetCartRequest) returns (Cart) {}
              rpc EmptyCart(EmptyCartRequest) returns (Empty) {}
          }

          message CartItem {
              string product_id = 1;
              int32  quantity = 2;
          }

          message AddItemRequest {
              string user_id = 1;
              CartItem item = 2;
          }

          message EmptyCartRequest {
              string user_id = 1;
          }

          message GetCartRequest {
              string user_id = 1;
          }

          message Cart {
              string user_id = 1;
              repeated CartItem items = 2;
          }

          message Empty {}

  connections:
    redis-cache:
      type: api
      params:
        projectName: gcp-microservice-demo
        componentName: redis
        endpoint: tcp-endpoint
      inject:
        env:
          - name: REDIS_ADDR
            value: "{{ .host }}:{{ .port }}"


---
apiVersion: openchoreo.dev/v1alpha1
kind: Service
metadata:
  name: cart
spec:
  owner:
    componentName: cart
    projectName: gcp-microservice-demo
  workloadName: cart
  overrides: {}
