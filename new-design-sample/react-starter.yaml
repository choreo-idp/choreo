apiVersion: core.choreo.dev/v1
kind: ComponentV2
metadata:
  name: react-starter
spec:
  owner:
    projectName: default
  type: WebApplication

---

# Defines a workload that specifies the developer contract which describes the source code including
# what configuration is needed to run, what endpoints are exposed, and how it connects to other components or platform resources.
apiVersion: core.choreo.dev/v1
kind: Workload
metadata:
  name: react-starter
spec:
  owner:
    componentName: react-starter
    projectName: default
  containers:
    main:
      image: choreoanonymouspullable.azurecr.io/react-spa:v0.9
      # React apps typically serve on port 8080 or 3000, using 8080 based on the legacy sample
      args: []
      env:
        - key: NODE_ENV
          value: production
        - key: PORT
          value: "8080"
  endpoints:
    webapp:
      protocol: TCP
      port: 8080
  connections: { } # How does this look like?

---

# WebApplication that specify runtime configuration for the component.
# This can be either managed by the component controller or manually created by the user.
apiVersion: core.choreo.dev/v1
kind: WebApplication
metadata:
  name: react-starter
spec:
  owner:
    componentName: react-starter
    projectName: default
  workloadName: react-starter
  className: react-webapp-standard
  overrides: { }

---
# Defines PE level configuration for the web application component.
apiVersion: core.choreo.dev/v1
kind: WebApplicationClass
metadata:
  name: react-webapp-standard
spec:
  deploymentTemplate:
    replicas: 1
    strategy:
      type: RollingUpdate
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 0
    template:
      metadata:
        labels:
          reloader.stakater.com/auto: "true"
      spec:
        containers:
          - name: main
            env:
              - name: NODE_ENV
                value: "production"
            resources:
              requests:
                cpu: 100m
                memory: 128Mi
              limits:
                cpu: 200m
                memory: 256Mi
            readinessProbe:
              httpGet:
                path: /
                port: 8080
              initialDelaySeconds: 5
              periodSeconds: 10
            livenessProbe:
              httpGet:
                path: /
                port: 8080
              initialDelaySeconds: 30
              periodSeconds: 30
  serviceTemplate:
    type: ClusterIP
    ports:
      - name: http
        port: 8080
        targetPort: 8080
        protocol: TCP
