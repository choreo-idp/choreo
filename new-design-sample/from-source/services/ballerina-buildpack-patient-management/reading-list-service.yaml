apiVersion: openchoreo.dev/v1alpha1
kind: Component
metadata:
  name: patient-management-service
  namespace: default
spec:
  owner:
    projectName: default
  type: Service
  build:
    repository:
      appPath: /patient-management-service
      revision:
        branch: main
      url: https://github.com/wso2/choreo-samples
    templateRef:
      name: ballerina-buildpack

---
apiVersion: openchoreo.dev/v1alpha1
kind: BuildV2
metadata:
  name: patient-management-service-build-01
  namespace: default
spec:
  owner:
    componentName: patient-management-service
    projectName: default
  repository:
    appPath: /patient-management-service
    revision:
      branch: main
    url: https://github.com/wso2/choreo-samples
  templateRef:
    name: ballerina-buildpack

---
apiVersion: openchoreo.dev/v1alpha1
kind: Workload
metadata:
  name: patient-management-service-workload
  namespace: default
spec:
  owner:
    componentName: patient-management-service
    projectName: default
  containers:
    main:
      image: "test:latest"
      args:
      - --port
      - "9090"
  endpoints:
    rest-api:
      port: 9090
      type: REST
      schema:
        type: REST
        content: |
          openapi: 3.0.1
          info:
            title: Mediflow
            version: 1.0.0
          servers:
            - url: "{server}:{port}/mediflow"
              variables:
                server:
                  default: http://localhost
                port:
                  default: "9090"
          paths:
            /health:
              get:
                operationId: getHealth
                responses:
                  "202":
                    description: Accepted
                  "500":
                    description: InternalServerError
                    content:
                      application/json:
                        schema:
                          $ref: '#/components/schemas/ErrorPayload'
            /patients:
              get:
                operationId: getPatients
                responses:
                  "202":
                    description: Accepted
                  "500":
                    description: InternalServerError
                    content:
                      application/json:
                        schema:
                          $ref: '#/components/schemas/ErrorPayload'
              post:
                operationId: postPatients
                requestBody:
                  content:
                    '*/*':
                      schema:
                        description: Any type of entity body
                responses:
                  "202":
                    description: Accepted
                  "500":
                    description: InternalServerError
                    content:
                      application/json:
                        schema:
                          $ref: '#/components/schemas/ErrorPayload'
                  "400":
                    description: BadRequest
                    content:
                      application/json:
                        schema:
                          $ref: '#/components/schemas/ErrorPayload'
            /patients/{name}:
              get:
                operationId: getPatientsName
                parameters:
                  - name: name
                    in: path
                    required: true
                    schema:
                      type: string
                responses:
                  "202":
                    description: Accepted
                  "500":
                    description: InternalServerError
                    content:
                      application/json:
                        schema:
                          $ref: '#/components/schemas/ErrorPayload'
                  "400":
                    description: BadRequest
                    content:
                      application/json:
                        schema:
                          $ref: '#/components/schemas/ErrorPayload'
          components:
            schemas:
              ErrorPayload:
                required:
                  - message
                  - method
                  - path
                  - reason
                  - status
                  - timestamp
                type: object
                properties:
                  timestamp:
                    type: string
                  status:
                    type: integer
                    format: int64
                  reason:
                    type: string
                  message:
                    type: string
                  path:
                    type: string
                  method:
                    type: string

---
apiVersion: openchoreo.dev/v1alpha1
kind: Service
metadata:
  name: patient-management-service-service
  namespace: default
spec:
  owner:
    componentName: patient-management-service
    projectName: default
  workloadName: patient-management-service-workload
  className: ballerina-service-standard
  apis:
    reading-list-api: 
      type: REST
      className: patient-management-service-standard
      rest:
        backend:
          port: 9090
          basePath: /mediflow
        exposeLevels: [ "Public" ]

---
# Defines the APIClass for the REST API exposed by the service.
apiVersion: openchoreo.dev/v1alpha1
kind: APIClass
metadata:
  name: patient-management-service-standard
  namespace: default
spec:
  restPolicy:
    defaults:
      rateLimit:
        requests: 1000
        window: "1h"
      authentication:
        type: jwt
        jwt:
          jwks: "https://dev-tfsf6412a2bn011a.us.auth0.com/.well-known/jwks.json"
          issuer: "https://dev-tfsf6412a2bn011a.us.auth0.com/"
          audience: ["openchoreo:mediflow:service"]
        oauth2:
          scopes: ["mediflow"]
          tokenUrl: "https://dev-tfsf6412a2bn011a.us.auth0.com/oauth/token"
      cors:
        allowOrigins: ["https://example.com", "https://app.example.com"]
        allowMethods: ["GET", "POST", "PUT", "DELETE"]
        allowHeaders: ["Content-Type", "Authorization"]
        exposeHeaders: ["X-Request-ID"]
        maxAge: 86400
      circuitBreaker:
        enabled: true
        maxConnections: 100
    public:
      rateLimit:
        requests: 100
        window: "1h"
      security:
        requireTLS: true
        minTLSVersion: "1.3"
    organization:
      rateLimit:
        requests: 5000
        window: "1h"

---
# Defines PE level configuration for the service component.
# Individual component types will have their own classes. E.g., ScheduledTaskClass, WebApplicationClass, etc.
apiVersion: openchoreo.dev/v1alpha1
kind: ServiceClass
metadata:
  name: ballerina-service-standard
  namespace: default
spec:
  deploymentTemplate:
    replicas: 1
    strategy:
      type: RollingUpdate
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 0
    template:
      metadata:
        labels:
          reloader.stakater.com/auto: "true"
      spec:
        containers:
          - name: main
            env:
              - name: LOG_TYPE
                value: "json"
            resources:
              requests:
                cpu: 200m
                memory: 256Mi
              limits:
                cpu: 500m
                memory: 512Mi
          - name: sidecar
            image: busybox:latest
            command: [ "/bin/sh", "-c" ]
            args:
              - |
                echo "Exposing metrics on port 12001";
                # Simulate long-running metrics server
                while true; do nc -lk -p 12001 -e echo "metrics 1"; done
            ports:
              - name: metrics
                containerPort: 12001
            resources:
              requests:
                cpu: 200m
                memory: 256Mi
              limits:
                cpu: 500m
                memory: 512Mi
            readinessProbe:
              tcpSocket:
                port: metrics
              initialDelaySeconds: 5
              periodSeconds: 10
  serviceTemplate:
    ports:
      - name: metrics-http
        port: 12001
        targetPort: 12001
